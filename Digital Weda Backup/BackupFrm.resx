<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyIRA/UpG5r1qRvldincaLXp3Of26p3h9Sa
        XqvgqG7F46xy3eCnbMDUmF1NAAAAAAAAAAAAAAAAzJFeHtusfK/pyKXp+ebR//7w3//+8N///vDf/+jC
        mv/yvYf+3aRp5tmfY7Djq3HX77qC6tebWlIAAAAAAAAAANyxhMv+797//vDf//7w3//+8N///vDf//3u
        3P/ls37+3aRo18yZMwUAAAAAyJBOF9ieYMzUl1qwAAAAAAAAAADmwJrg/vDf//7w3//+8N///vDf//7w
        3//24Mn/77uE/tOaXZIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5sCa4Pnm0f/qy6j/6suo/+rK
        qf/oyKT/58Oe/+axef7Zn2TFAAAAAL+AQATMkFG+4alu49WaXN4AAAAAAAAAAN6yhO3qyqn//e/d//7w
        3//+8N///vDf//7w3//kuIv/8r6G/dugZMTXml+L26Fl1/K+hvngqG7kAAAAAAAAAADju5Hy/vDf//7w
        3//+8N///vDf//7w3//+8N///OzY/+W7jf/qt4H+8L2G/eSvdvvUmluDzZBQvAAAAAAAAAAA5sCa4P7w
        3//+797/9N7D/+7Ttf/rza3/682t/+/Ttf/03sT//e3b//jkzv/mwJrgAAAAAL+AQAQAAAAAAAAAAOK8
        k+Pmw53/5sSf//HYvP/45s///e7c//3u3P/45s//8di7/+bEn//mw53/5L6U4gAAAAAAAAAAAAAAAAAA
        AADguIz3/e7c//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///e7c/9+3ivcAAAAAAAAAAAAA
        AAAAAAAA5sCa4P7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//mwJrgAAAAAAAA
        AAAAAAAAAAAAAObAmuD66dT/68yq/+fGov/mw57/5cGa/+XBmv/mw57/58ai/+vMq//66dT/5sCa4AAA
        AAAAAAAAAAAAAAAAAADgtIfu6Mik//ro1P/+8N///vDf//7w3//+8N///vDf//7w3//559P/6Mik/9+z
        h+4AAAAAAAAAAAAAAAAAAAAA4LeN6v7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//guI3pAAAAAAAAAAAAAAAAAAAAANOkbUbgtovE79Oz8/zt2v/+8N///vDf//7w3//+8N///OzZ/+7S
        svPgtYrE06BqRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2PVynWom181qNvltilc6LYpXOi1qNvltai
        bXzNj1cpAAAAAAAAAAAAAAAAAAAAAPwDAADgAQAAwBwAAMAfAADAGAAAwAAAAMAAAADAAwAAwAMAAMAD
        AADAAwAAwAMAAMADAADAAwAA4AcAAPw/AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMWL
        RhbLh0Qiy4dEIsuHRCLLh0QiyopKGAAAAAAAAAAAxohKLcyNTqTMjk7kzI5P78yPT+3Mj0/ZzI1Nd8yA
        TQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+PQBDJi0pazpRap86U
        WtvOl1vm0p5n6NelcOnXpnLu1qZx7dOfa+jRnGPlzpVa5cyPUPLSlVb48LqD//zLlv/9zJj//cyY//nI
        kv/iq3H5zpBS5MuKTjsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMiGSSrLkVW7zpZc6uO9
        lvXz28D//e/d//7w3//+8N///vDf//7w3//+8N///vDf//7w3//crXv/4alx//3Ml//5x5P/5q93/dui
        ZvLgp2z077uE//3Ml//3xI//z5NU7sqMTj4AAAAAAAAAAAAAAAAAAAAAAAAAAP//AAHKkFSD0Jlh6/DX
        uv7+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//68yp/9ukav/9zJj/7ruD/syO
        T+zKjUx5xohGOsaHR0jMjk6005la7frIlP/4xZD/zI9O6tGLRgsAAAAAAAAAAAAAAAAAAAAAzJFUeduu
        fvH97tz//vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//TnGL/+ceS//PA
        iv/Nj0/cxYtGFgAAAAAAAAAAAAAAAAAAAADKi0tc1pld7PbDjf/dpGn6y4xNegAAAAAAAAAAAAAAAAAA
        AADNklbm/e3c//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//9d/F/9qj
        av/9zJj/1pte8seKRzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLjUuEzY9Ou82PTrvKjUuCAAAAAAAA
        AAAAAAAAAAAAAM2WW+v+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//rza3/5K51//3MmP/MkE7nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzZZb6/7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf/+rKqP/msHf//cyY/8uPT+MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNllvr/vDf//7w3//+8N///vDf//fkzf/qy6j/37SH/9ak
        b//SnGX/0pxl/9KdZv/SnWb/0Jdd/9ykaP/9zJj/z5NT7r+PQBAAAAAAAAAAAAAAAADGjkcSyYlJ08mK
        SfrLjk7xy45O8cuOTvHHiEj7AAAAAAAAAAAAAAAAAAAAAM2WW+v+8N///e3c/+fFoP/UoWv/2al3/+bE
        n//z3cL/++vY//7w3//+8N///vDf//7w3//87dr/0phd//3Ml//mr3b9y4xOpwAAAAAAAAAAAAAAAAAA
        AADMjE0Uy45O2++6g/39zJj//cyY/82QUesAAAAAAAAAAAAAAAAAAAAAzZZb6/LZvv/SnWb/47+X//rq
        1f/+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//esoL/67V8//3Ml//YnmH1y4xOp8yI
        RA8AAAAAAAAAAMWHSDXLjk7e7beA+/3MmP/9zJj/zZBR6wAAAAAAAAAAAAAAAAAAAADLk1fw0p1m//fk
        zf/+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//ro0//RmF3/88CK//3M
        l//nsXj9z5JT78yOTuTMjk/p15xe8fXCjP/9zJj/46tx9u+5gvzNkFHrAAAAAAAAAAAAAAAAAAAAAMyT
        Vvz45M7//vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//Xf
        xv/SmF7/6rV8//3Ml//9zJj//cyY//3MmP/9zJj/+MaQ/9meYO/MjU+vy45O28mKSvcAAAAAAAAAAAAA
        AAAAAAAA0Jxj9f7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//rp1P/fs4X/0ple/+Crc//nsnr/5bB3/9qjaP/Mj1H9yYxKWQAAAADMjE0UyYlJ1AAA
        AAAAAAAAAAAAAAAAAADNllvr/vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//87Nr/8di8/+zOrf/t0bH/9d/H/82WW+sAAAAAAAAAAAAA
        AADGjkcSAAAAAAAAAAAAAAAAAAAAAM2WW+v+8N///vDf//7w3//+8N//++rX//DWuf/mw53/37WJ/9mo
        d//WpG//1qRv/9akb//WpG//2ah3/9+1if/mw57/8Ne6//vq1//+8N///vDf//7w3//+8N//zZZb6wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzZZb6/7w3//66dX/5sOd/9Wjb//WpHD/4ruQ/+zP
        r//y2b7/+OTO//vq1//+8N///vDf//vq1//45M7/8tm+/+zPr//iupH/1qRw/9ajb//mw57/+urV//7w
        3//NllvrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNllvr5sSf/9GaYf/mxJ//+unU//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//+unU/+bD
        nv/RmmH/58Wg/82WW+sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2TWPTdsIL//Oza//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//zt2v/cr4H/zZNY9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0Jhf+/7v
        3v/+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//3v3f/QmF/7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADNllvr/vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/82WW+sAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAM2WW+v+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//zZZb6wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzZZb6/7w3//+8N///vDf//7w3//+8N//+unU//DWuf/pyqf/4ryU/+C3
        jP/dsoT/3bKE/+C3jP/ivJT/6cqn//DWuf/66dT//vDf//7w3//+8N///vDf//7w3//NllvrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNllvr/vDf//7w3v/u07X/3rKE/9KbZP/Wo2//4LeM/+bD
        nv/t0bH/8Na5//PbwP/z28D/8Na5/+3Rsf/mw57/4LeM/9Wjb//Sm2T/3rKE/+/Ttf/+8N7//vDf/82W
        W+sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2WW+vu07T/0p1m/9+0h//x2Lz//e/d//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//3v3f/x17v/3rSH/9Oe
        Zv/v1Lb/zZZb6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzZJX9Nemcv/55dD//vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N//+ObP/9elcf/Mklf0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMkVX9/e3c//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///O3b/8yRVf0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyR
        VNfz3cL//vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//z3MH/zJFV1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxodHJM2SVd/nxKD3/Oza//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//87Nr/5sSe98ySVd7FikkjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAv4BACMuOUnrMklbj2ah46+vMqv724sr//vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//bhyv/rzKn+2Kh368ySVuPMkFF3tpJJBwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAHHikcyzJBSg82UWsPNk1fkzpVb6dSf
        aujWpXDq16Zy7temcu7WpXDq1J9q6M6VW+nMk1bjzZVZwsyPUoLHikcy//8AAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAyopKGMuHRCLLh0Qiy4dEIsuHRCLKikoYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///B//wAAH/gAAA/gAAcH4AAPx8AAH8PAAB//wAAf/8AAHwPAA
        A+DwAAHg8AAAAPAAAADwAAAO8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/4AAAf/gAAf/+AAf//////
</value>
  </data>
</root>